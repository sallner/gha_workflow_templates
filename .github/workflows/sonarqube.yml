name: SonarQube

on:
  workflow_call:
    inputs:
      project_type:
        default: "python"
        required: false
        type: string

    secrets:
      SONARQUBETOKEN:
        required: true

jobs:
  scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        name: coverage-xml
    - name: Prepare repository url
      run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
    - name: Prepare environment for python
      if: ${{ inputs.project_type == 'python'}}
      run: |
        echo "COVERAGE_PATH=-Dsonar.python.coverage.reportPaths=/github/workspace/coverage.xml" >> $GITHUB_ENV
        echo "EXCLUSIONS=-Dsonar.exclusions=**/*.js,**/*.css,**/*.scss,**/*.html,**/versions/**,**VUVM20**" >> $GITHUB_ENV
    - name: Prepare environment for javascript
      if: ${{ inputs.project_type == 'javascript'}}
      run: |
        echo "COVERAGE_PATH=-Dsonar.javascript.lcov.reportPaths=${GITHUB_WORKSPACE}/lcov.info" >> $GITHUB_ENV
        echo "EXCLUSIONS=-Dsonar.exclusions=**/*.test.js,**/*index.js,src/polyfill.js,src/serviceWorker.js" >> $GITHUB_ENV
    - name: SonarQube Scan
      if: ${{ !github.event.number }}
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBETOKEN }}
        SONAR_HOST_URL: https://sonarqube.risclog.fcio.net
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=${{env.REPOSITORY_NAME}}
          -Dsonar.projectName=${{env.REPOSITORY_NAME}}
          -Dsonar.sources=./src/
          -Dsonar.sourceEncoding=UTF-8
          ${{env.COVERAGE_PATH}}
          ${{env.EXCLUSIONS}}
    - name: SonarQube Scan for PullRequests
      if: ${{ github.event.number }}
      uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBETOKEN }}
        SONAR_HOST_URL: https://sonarqube.risclog.fcio.net
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=${{env.REPOSITORY_NAME}}
          -Dsonar.projectName=${{env.REPOSITORY_NAME}}
          -Dsonar.sources=./src/
          -Dsonar.sourceEncoding=UTF-8
          -Dsonar.pullrequest.key=${{ github.event.number }}
          -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
          -Dsonar.pullrequest.base=${{ github.BASE_REF }}
          -Dsonar.pullrequest.github.repository=${{ github.repository }}
          -Dsonar.scm.provider=git
          ${{env.COVERAGE_PATH}}
          ${{env.EXCLUSIONS}}
    - name: SonarQube Quality Gate check
      uses: sonarsource/sonarqube-quality-gate-action@master
      # Force to fail step after specific time
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBETOKEN }}
